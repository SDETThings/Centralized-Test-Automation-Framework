name: CLIENT002 TESTING WORKFLOW
on:
  workflow_dispatch:
  repository_dispatch: # Triggered by an external webhook
    types: [ trigger-test-case-run ]  # Custom event type

jobs:
  build:
    runs-on: ubuntu-latest

    environment: client001
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Clear TestCaseInputDriver JSON file (if webhook input is available)
        run: |
          if [ -n "${{ github.event.client_payload.TestCaseRunConfiguration }}" ]; then
          echo '{}' > ./src/test/resources/ClientTestCaseDriverFiles/TestCaseInputDriver.json
          echo "Cleared TestCaseInputDriver.json for webhook input."
          fi

      - name: Update TestCaseInputDriver JSON file from webhook payload (if available)
        if: github.event_name == 'repository_dispatch' && github.event.client_payload.TestCaseRunConfiguration  # Runs only if triggered by webhook and payload exists
        run: |
          echo '${{ toJson(github.event.client_payload.TestCaseRunConfiguration) }}' >> ./src/test/resources/ClientTestCaseDriverFiles/TestCaseInputDriver.json
          echo "Updated TestCaseInputDriver.json with webhook payload."

      - name: Update TestCaseInputDriver json file
        uses: microsoft/variable-substitution@v1
        with:
          files: './src/test/resources/ClientTestCaseDriverFiles/TestCaseInputDriver.json'
        env:
          TestCaseRunConfiguration: ${{ vars.CLIENT002_TESTCASE_RUN_DETAILS }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Import core library
        run: mvn -s settings.xml install -DskipTests
        env:
          MAVEN_USER: ${{ secrets.OWNER_USERNAME }}
          MAVEN_TOKEN: ${{ secrets.OWNER_TOKEN }}

      - name: Ensure Config.properties is writable
        run: chmod +w Config.properties

      - name: Delete existing isHeadless property from Config.properties
        run: |
          sed -i '/^isHeadless=/d' ./Config.properties || true

      - name: Add isHeadless value to Config.properties
        run: |
          echo "isHeadless=true" >> ./Config.properties
          cat Config.properties  # Verify the addition

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Chrome dependencies
        run: |
          sudo apt-get install -y \
            libnss3 \
            libgconf-2-4 \
            libxss1 \
            libasound2 \
            fonts-liberation \
            xdg-utils

      # Install Firefox
      - name: Install Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox

      - name: Install GeckoDriver for Firefox
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.33.0/geckodriver-v0.33.0-linux64.tar.gz
          tar -xzf geckodriver-v0.33.0-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/

      - name: Run test cases
        id: test_run
        run: mvn clean compile test --file pom.xml
        continue-on-error: true  # Allow the workflow to continue even if this step fails

      - name: Upload Folder as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-folder-artifact  # Name of the artifact
          path: ./src/test/resources/TestCaseResults/

      # This will mark the job as failed if the test cases failed
      - name: Check Test Results
        run: |
          if [ "${{ steps.test_run.outcome }}" != "success" ]; then
          echo "Tests failed!"
          exit 1  # Mark the job as failed
          fi
